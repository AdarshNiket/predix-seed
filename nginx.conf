pid  /tmp/nginx.pid;
worker_processes 1;

# daemon off;

events {
    worker_connections  4096;  ## Default: 1024
}

http
{
    log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';

    # Define the MIME types for files.
    include       mime.types;
	# Tell proxies to cache both the gzipped and regular version of a resource
      # whenever the client's Accept-Encoding capabilities header varies;
      # Avoids the issue where a non-gzip capable client (which is extremely rare
      # today) would display gibberish if their proxy gave them the gzipped version.
      gzip_vary          on;
      gzip on;
      gzip_disable "msie6";

	
    default_type  application/octet-stream;

	server
	{
		listen 9000;
		root public;

        access_log /tmp/nginx.access.log;
		error_log  /tmp/nginx.error.log;
		
		location /services/asset {
			proxy_pass http://asset-server.grc-apps.svc.ice.ge.com/services/asset;
			resolver grmsamer.grms.ge.com;
		}


		location /api/v2/proxy {

		    set $serverURL $http_Service_End_Point;
		    # Override the url based on type of request
		    if ($http_Service_End_Point ~* "\(dashboardContextTree\)/(.*)") {
		        set $serverURL http://dashboard-mock-server.cfapps.io/qa/service/readerApp/EntityTree/node/$1;
            }
            if ($http_Service_End_Point ~* "\(dashboardViewService\)(.*)") {
                set $serverURL http://dev-dashboard-server.cfapps.io/views$1;
            }
            if ($http_Service_End_Point ~* "\(dashboardContextMetadata\)/(.*)") {
                set $serverURL http://dashboard-mock-server.cfapps.io/qa/service/readerApp/Entity/$1;
            }

		    proxy_pass $serverURL;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header Authorization $http_authorization;
			resolver grmsamer.grms.ge.com;
		}

        location /components {
		    try_files bower_components/iids/dist/iidx/components/$uri 404;
		}

		location / {
		    try_files $uri $uri/ /index.html;
		}
	}
}