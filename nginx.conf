# Inspired by https://github.com/cloudfoundry-community/nginx-buildpack
pid <%= ENV['APP_ROOT'] %>/nginx.pid;

worker_processes 1;
daemon off;

error_log /tmp/nginx.error.log;
events { worker_connections 1024; }


http
{
	log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
	access_log /tmp/nginx.access.log;


	# Define the MIME types for files.
	include       mime.types;
	# Tell proxies to cache both the gzipped and regular version of a resource
	# whenever the client's Accept-Encoding capabilities header varies;
	# Avoids the issue where a non-gzip capable client (which is extremely rare
	# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary          on;
	gzip on;
	gzip_disable "msie6";

    default_type  application/octet-stream;

	server
	{
		listen 9000;
		root dist/public;

		location /services/asset {
			proxy_pass http://asset-server.grc-apps.svc.ice.ge.com/services/asset;
		}

		#Support /api/v2/proxy end point
		location /api/v2/proxy {
			# read the header Service-End-Point
			set $serverURL $http_Service_End_Point;
			# Sample Override the url based on type of request
			if ($http_Service_End_Point ~* "\(placeHolder\)/(.*)")
			{
				# Replace any kind of placeholder
				set $serverURL http://actual-server.ge.com/$1;
			}

			proxy_pass $serverURL;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			#Forward the request header
			proxy_set_header Authorization $http_authorization;
			resolver grmsamer.grms.ge.com;
		}

		location / {
		    # For HTML5 Support, Serve index.html for any other endpoint
		    try_files $uri $uri/ /index.html;
		}
	}
}
